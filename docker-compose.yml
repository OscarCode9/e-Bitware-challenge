version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=oscar
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot_app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: oscar
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres_network
  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - postgres_network
networks:
  postgres_network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data: